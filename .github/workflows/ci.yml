name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check all packages
        run: pnpm turbo type-check

      - name: Lint all packages
        run: pnpm turbo lint

      - name: Build all packages
        run: pnpm turbo build

      - name: Test web app
        run: pnpm --filter @deva/web test
        env:
          NODE_ENV: test

      - name: Test CLI app
        run: pnpm --filter @deva/cli test
        env:
          NODE_ENV: test

      - name: Test packages
        run: pnpm turbo test --filter="@deva/*" --if-present

      - name: Web app build verification
        run: |
          cd apps/web
          pnpm build
          echo "✅ Web app builds successfully"

      - name: CLI app build verification
        run: |
          cd apps/cli
          pnpm build
          echo "✅ CLI app builds successfully"

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: pnpm --filter @deva/web exec playwright install --with-deps

      - name: Build apps
        run: pnpm turbo build

      - name: Run E2E tests
        run: pnpm --filter @deva/web e2e
        env:
          NODE_ENV: test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          if pnpm audit --audit-level high --json | grep -q '"vulnerabilities"'; then
            echo "High or critical vulnerabilities found!"
            pnpm audit --audit-level high
            exit 1
          fi